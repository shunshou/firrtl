circuit ICache:

  module ICache : 
    input clk : Clock
    input reset : UInt<1>
    output io : {flip req : {valid : UInt<1>, bits : {addr : UInt<39>}}, flip s1_ppn : UInt<20>, flip s1_kill : UInt<1>, flip s2_kill : UInt<1>, resp : {flip ready : UInt<1>, valid : UInt<1>, bits : {data : UInt<16>, datablock : UInt<64>}}, flip invalidate : UInt<1>, mem : {acquire : {flip ready : UInt<1>, valid : UInt<1>, bits : {addr_block : UInt<26>, client_xact_id : UInt<1>, addr_beat : UInt<3>, is_builtin_type : UInt<1>, a_type : UInt<3>, union : UInt<12>, data : UInt<64>}}, flip grant : {flip ready : UInt<1>, valid : UInt<1>, bits : {addr_beat : UInt<3>, client_xact_id : UInt<1>, manager_xact_id : UInt<4>, is_builtin_type : UInt<1>, g_type : UInt<4>, data : UInt<64>}}}}
    
    io is invalid
    reg state : UInt<2>, clk with : (reset => (reset, UInt<2>("h00")))
    reg invalidated : UInt<1>, clk
    node stall = eq(io.resp.ready, UInt<1>("h00")) @[icache.scala 44:15] 
    wire rdy : UInt<1> @[icache.scala 45:17] 
    rdy is invalid @[icache.scala 45:17] 
    reg refill_addr : UInt<32>, clk
    wire s1_any_tag_hit : UInt<1> @[icache.scala 48:28] 
    s1_any_tag_hit is invalid @[icache.scala 48:28] 
    reg s1_valid : UInt<1>, clk with : (reset => (reset, UInt<1>("h00")))
    reg s1_vaddr : UInt, clk
    node T_827 = bits(s1_vaddr, 11, 0) @[icache.scala 52:41] 
    node s1_paddr = cat(io.s1_ppn, T_827) @[Cat.scala 20:58] 
    node s1_tag = bits(s1_paddr, 31, 12) @[icache.scala 53:24] 
    node T_828 = and(s1_valid, stall) @[icache.scala 55:43] 
    node s0_valid = or(io.req.valid, T_828) @[icache.scala 55:31] 
    node T_829 = and(s1_valid, stall) @[icache.scala 56:31] 
    node s0_vaddr = mux(T_829, s1_vaddr, io.req.bits.addr) @[icache.scala 56:21] 
    node T_830 = and(io.req.valid, rdy) @[icache.scala 58:28] 
    node T_831 = and(s1_valid, stall) @[icache.scala 58:47] 
    node T_833 = eq(io.s1_kill, UInt<1>("h00")) @[icache.scala 58:59] 
    node T_834 = and(T_831, T_833) @[icache.scala 58:56] 
    node T_835 = or(T_830, T_834) @[icache.scala 58:35] 
    s1_valid <= T_835 @[icache.scala 58:12] 
    node T_836 = and(io.req.valid, rdy) @[icache.scala 59:22] 
    when T_836 : @[icache.scala 59:30] 
      s1_vaddr <= io.req.bits.addr @[icache.scala 60:14] 
      skip @[icache.scala 59:30] 
    node T_838 = eq(io.s1_kill, UInt<1>("h00")) @[icache.scala 63:31] 
    node T_839 = and(s1_valid, T_838) @[icache.scala 63:28] 
    node T_840 = eq(state, UInt<2>("h00")) @[icache.scala 63:52] 
    node out_valid = and(T_839, T_840) @[icache.scala 63:43] 
    node s1_idx = bits(s1_vaddr, 11, 6) @[icache.scala 64:24] 
    node s1_hit = and(out_valid, s1_any_tag_hit) @[icache.scala 65:26] 
    node T_842 = eq(s1_any_tag_hit, UInt<1>("h00")) @[icache.scala 66:30] 
    node s1_miss = and(out_valid, T_842) @[icache.scala 66:27] 
    node T_843 = eq(state, UInt<2>("h00")) @[icache.scala 67:16] 
    node T_845 = eq(s1_miss, UInt<1>("h00")) @[icache.scala 67:31] 
    node T_846 = and(T_843, T_845) @[icache.scala 67:28] 
    rdy <= T_846 @[icache.scala 67:7] 
    node T_847 = eq(state, UInt<2>("h00")) @[icache.scala 69:26] 
    node T_848 = and(s1_miss, T_847) @[icache.scala 69:17] 
    when T_848 : @[icache.scala 69:39] 
      refill_addr <= s1_paddr @[icache.scala 70:17] 
      skip @[icache.scala 69:39] 
    node refill_tag = bits(refill_addr, 31, 12) @[icache.scala 72:31] 
    inst FlowThroughSerializer_1 of FlowThroughSerializer @[Serializer.scala 63:20] 
    FlowThroughSerializer_1.io is invalid
    FlowThroughSerializer_1.clk <= clk
    FlowThroughSerializer_1.reset <= reset
    FlowThroughSerializer_1.io.in.valid <= io.mem.grant.valid @[Serializer.scala 64:20] 
    FlowThroughSerializer_1.io.in.bits <- io.mem.grant.bits @[Serializer.scala 65:19] 
    io.mem.grant.ready <= FlowThroughSerializer_1.io.in.ready @[Serializer.scala 66:14] 
    node T_849 = and(FlowThroughSerializer_1.io.out.ready, FlowThroughSerializer_1.io.out.valid) @[Decoupled.scala 16:42] 
    reg refill_cnt : UInt<3>, clk with : (reset => (reset, UInt<3>("h00")))
    when T_849 : @[Counter.scala 43:17] 
      node T_852 = eq(refill_cnt, UInt<3>("h07")) @[Counter.scala 20:24] 
      node T_854 = add(refill_cnt, UInt<1>("h01")) @[Counter.scala 21:22] 
      node T_855 = tail(T_854, 1) @[Counter.scala 21:22] 
      refill_cnt <= T_855 @[Counter.scala 21:13] 
      skip @[Counter.scala 43:17] 
    node refill_wrap = and(T_849, T_852) @[Counter.scala 44:20] 
    node T_856 = eq(state, UInt<2>("h03")) @[icache.scala 76:27] 
    node refill_done = and(T_856, refill_wrap) @[icache.scala 76:40] 
    FlowThroughSerializer_1.io.out.ready <= UInt<1>("h01") @[icache.scala 77:22] 
    reg T_859 : UInt<16>, clk with : (reset => (reset, UInt<16>("h01")))
    when s1_miss : @[LFSR.scala 19:22] 
      node T_860 = bits(T_859, 0, 0) @[LFSR.scala 19:40] 
      node T_861 = bits(T_859, 2, 2) @[LFSR.scala 19:48] 
      node T_862 = xor(T_860, T_861) @[LFSR.scala 19:43] 
      node T_863 = bits(T_859, 3, 3) @[LFSR.scala 19:56] 
      node T_864 = xor(T_862, T_863) @[LFSR.scala 19:51] 
      node T_865 = bits(T_859, 5, 5) @[LFSR.scala 19:64] 
      node T_866 = xor(T_864, T_865) @[LFSR.scala 19:59] 
      node T_867 = bits(T_859, 15, 1) @[LFSR.scala 19:73] 
      node T_868 = cat(T_866, T_867) @[Cat.scala 20:58] 
      T_859 <= T_868 @[LFSR.scala 19:29] 
      skip @[LFSR.scala 19:22] 
    node repl_way = bits(T_859, 1, 0) @[icache.scala 79:56] 
    smem tag_array : UInt<20>[4][64] @[icache.scala 81:25] 
    node T_877 = bits(s0_vaddr, 11, 6) @[icache.scala 82:42] 
    node T_879 = eq(refill_done, UInt<1>("h00")) @[icache.scala 82:70] 
    node T_880 = and(T_879, s0_valid) @[icache.scala 82:83] 
    wire T_882 : UInt
    T_882 is invalid
    when T_880 :
      T_882 <= T_877
      skip
    read mport tag_rdata = tag_array[T_882], clk
    when refill_done : @[icache.scala 83:22] 
      wire T_891 : UInt<20>[4] @[icache.scala 85:44] 
      T_891 is invalid @[icache.scala 85:44] 
      T_891[0] <= refill_tag @[icache.scala 85:44] 
      T_891[1] <= refill_tag @[icache.scala 85:44] 
      T_891[2] <= refill_tag @[icache.scala 85:44] 
      T_891[3] <= refill_tag @[icache.scala 85:44] 
      node T_894 = eq(repl_way, UInt<1>("h00")) @[icache.scala 85:80] 
      node T_896 = eq(repl_way, UInt<1>("h01")) @[icache.scala 85:80] 
      node T_898 = eq(repl_way, UInt<2>("h02")) @[icache.scala 85:80] 
      node T_900 = eq(repl_way, UInt<2>("h03")) @[icache.scala 85:80] 
      wire T_906 : UInt<1>[4] @[icache.scala 85:70] 
      T_906 is invalid @[icache.scala 85:70] 
      T_906[0] <= T_894 @[icache.scala 85:70] 
      T_906[1] <= T_896 @[icache.scala 85:70] 
      T_906[2] <= T_898 @[icache.scala 85:70] 
      T_906[3] <= T_900 @[icache.scala 85:70] 
      write mport T_910 = tag_array[s1_idx], clk
      when T_906[0] :
        T_910[0] <= T_891[0]
        skip
      when T_906[1] :
        T_910[1] <= T_891[1]
        skip
      when T_906[2] :
        T_910[2] <= T_891[2]
        skip
      when T_906[3] :
        T_910[3] <= T_891[3]
        skip
      skip @[icache.scala 83:22] 
    reg vb_array : UInt<256>, clk with : (reset => (reset, UInt<256>("h00")))
    node T_914 = eq(invalidated, UInt<1>("h00")) @[icache.scala 89:24] 
    node T_915 = and(refill_done, T_914) @[icache.scala 89:21] 
    when T_915 : @[icache.scala 89:38] 
      node T_916 = cat(repl_way, s1_idx) @[Cat.scala 20:58] 
      node T_919 = dshl(UInt<1>("h01"), T_916) @[icache.scala 90:32] 
      node T_920 = or(vb_array, T_919) @[icache.scala 90:32] 
      node T_921 = not(vb_array) @[icache.scala 90:32] 
      node T_922 = or(T_921, T_919) @[icache.scala 90:32] 
      node T_923 = not(T_922) @[icache.scala 90:32] 
      node T_924 = mux(UInt<1>("h01"), T_920, T_923) @[icache.scala 90:32] 
      vb_array <= T_924 @[icache.scala 90:14] 
      skip @[icache.scala 89:38] 
    when io.invalidate : @[icache.scala 92:24] 
      vb_array <= UInt<1>("h00") @[icache.scala 93:14] 
      invalidated <= UInt<1>("h01") @[icache.scala 94:17] 
      skip @[icache.scala 92:24] 
    wire s1_disparity : UInt<1>[4] @[icache.scala 96:26] 
    s1_disparity is invalid @[icache.scala 96:26] 
    node T_934 = and(s1_valid, s1_disparity[0]) @[icache.scala 98:20] 
    when T_934 : @[icache.scala 98:40] 
      node T_936 = cat(UInt<1>("h00"), s1_idx) @[Cat.scala 20:58] 
      node T_939 = dshl(UInt<1>("h01"), T_936) @[icache.scala 98:69] 
      node T_940 = or(vb_array, T_939) @[icache.scala 98:69] 
      node T_941 = not(vb_array) @[icache.scala 98:69] 
      node T_942 = or(T_941, T_939) @[icache.scala 98:69] 
      node T_943 = not(T_942) @[icache.scala 98:69] 
      node T_944 = mux(UInt<1>("h00"), T_940, T_943) @[icache.scala 98:69] 
      vb_array <= T_944 @[icache.scala 98:51] 
      skip @[icache.scala 98:40] 
    node T_945 = and(s1_valid, s1_disparity[1]) @[icache.scala 98:20] 
    when T_945 : @[icache.scala 98:40] 
      node T_947 = cat(UInt<1>("h01"), s1_idx) @[Cat.scala 20:58] 
      node T_950 = dshl(UInt<1>("h01"), T_947) @[icache.scala 98:69] 
      node T_951 = or(vb_array, T_950) @[icache.scala 98:69] 
      node T_952 = not(vb_array) @[icache.scala 98:69] 
      node T_953 = or(T_952, T_950) @[icache.scala 98:69] 
      node T_954 = not(T_953) @[icache.scala 98:69] 
      node T_955 = mux(UInt<1>("h00"), T_951, T_954) @[icache.scala 98:69] 
      vb_array <= T_955 @[icache.scala 98:51] 
      skip @[icache.scala 98:40] 
    node T_956 = and(s1_valid, s1_disparity[2]) @[icache.scala 98:20] 
    when T_956 : @[icache.scala 98:40] 
      node T_958 = cat(UInt<2>("h02"), s1_idx) @[Cat.scala 20:58] 
      node T_961 = dshl(UInt<1>("h01"), T_958) @[icache.scala 98:69] 
      node T_962 = or(vb_array, T_961) @[icache.scala 98:69] 
      node T_963 = not(vb_array) @[icache.scala 98:69] 
      node T_964 = or(T_963, T_961) @[icache.scala 98:69] 
      node T_965 = not(T_964) @[icache.scala 98:69] 
      node T_966 = mux(UInt<1>("h00"), T_962, T_965) @[icache.scala 98:69] 
      vb_array <= T_966 @[icache.scala 98:51] 
      skip @[icache.scala 98:40] 
    node T_967 = and(s1_valid, s1_disparity[3]) @[icache.scala 98:20] 
    when T_967 : @[icache.scala 98:40] 
      node T_969 = cat(UInt<2>("h03"), s1_idx) @[Cat.scala 20:58] 
      node T_972 = dshl(UInt<1>("h01"), T_969) @[icache.scala 98:69] 
      node T_973 = or(vb_array, T_972) @[icache.scala 98:69] 
      node T_974 = not(vb_array) @[icache.scala 98:69] 
      node T_975 = or(T_974, T_972) @[icache.scala 98:69] 
      node T_976 = not(T_975) @[icache.scala 98:69] 
      node T_977 = mux(UInt<1>("h00"), T_973, T_976) @[icache.scala 98:69] 
      vb_array <= T_977 @[icache.scala 98:51] 
      skip @[icache.scala 98:40] 
    wire s1_tag_match : UInt<1>[4] @[icache.scala 100:26] 
    s1_tag_match is invalid @[icache.scala 100:26] 
    wire s1_tag_hit : UInt<1>[4] @[icache.scala 101:24] 
    s1_tag_hit is invalid @[icache.scala 101:24] 
    wire s1_dout : UInt<64>[4] @[icache.scala 102:21] 
    s1_dout is invalid @[icache.scala 102:21] 
    node T_1000 = eq(io.invalidate, UInt<1>("h00")) @[icache.scala 105:17] 
    node T_1002 = bits(s1_vaddr, 11, 6) @[icache.scala 105:65] 
    node T_1003 = cat(UInt<1>("h00"), T_1002) @[Cat.scala 20:58] 
    node T_1004 = dshr(vb_array, T_1003) @[icache.scala 105:43] 
    node T_1005 = bits(T_1004, 0, 0) @[icache.scala 105:43] 
    node T_1006 = bits(T_1005, 0, 0) @[icache.scala 105:94] 
    node T_1007 = and(T_1000, T_1006) @[icache.scala 105:32] 
    node T_1010 = or(UInt<1>("h00"), UInt<1>("h00")) @[Ecc.scala 14:27] 
    node T_1011 = bits(tag_rdata[0], 19, 0) @[icache.scala 108:31] 
    node T_1012 = eq(T_1011, s1_tag) @[icache.scala 108:45] 
    s1_tag_match[0] <= T_1012 @[icache.scala 108:21] 
    node T_1013 = and(T_1007, s1_tag_match[0]) @[icache.scala 109:28] 
    s1_tag_hit[0] <= T_1013 @[icache.scala 109:19] 
    node T_1016 = or(UInt<1>("h00"), UInt<1>("h00")) @[Ecc.scala 14:27] 
    node T_1017 = or(T_1010, T_1016) @[icache.scala 110:51] 
    node T_1018 = and(T_1007, T_1017) @[icache.scala 110:30] 
    s1_disparity[0] <= T_1018 @[icache.scala 110:21] 
    node T_1020 = eq(io.invalidate, UInt<1>("h00")) @[icache.scala 105:17] 
    node T_1022 = bits(s1_vaddr, 11, 6) @[icache.scala 105:65] 
    node T_1023 = cat(UInt<1>("h01"), T_1022) @[Cat.scala 20:58] 
    node T_1024 = dshr(vb_array, T_1023) @[icache.scala 105:43] 
    node T_1025 = bits(T_1024, 0, 0) @[icache.scala 105:43] 
    node T_1026 = bits(T_1025, 0, 0) @[icache.scala 105:94] 
    node T_1027 = and(T_1020, T_1026) @[icache.scala 105:32] 
    node T_1030 = or(UInt<1>("h00"), UInt<1>("h00")) @[Ecc.scala 14:27] 
    node T_1031 = bits(tag_rdata[1], 19, 0) @[icache.scala 108:31] 
    node T_1032 = eq(T_1031, s1_tag) @[icache.scala 108:45] 
    s1_tag_match[1] <= T_1032 @[icache.scala 108:21] 
    node T_1033 = and(T_1027, s1_tag_match[1]) @[icache.scala 109:28] 
    s1_tag_hit[1] <= T_1033 @[icache.scala 109:19] 
    node T_1036 = or(UInt<1>("h00"), UInt<1>("h00")) @[Ecc.scala 14:27] 
    node T_1037 = or(T_1030, T_1036) @[icache.scala 110:51] 
    node T_1038 = and(T_1027, T_1037) @[icache.scala 110:30] 
    s1_disparity[1] <= T_1038 @[icache.scala 110:21] 
    node T_1040 = eq(io.invalidate, UInt<1>("h00")) @[icache.scala 105:17] 
    node T_1042 = bits(s1_vaddr, 11, 6) @[icache.scala 105:65] 
    node T_1043 = cat(UInt<2>("h02"), T_1042) @[Cat.scala 20:58] 
    node T_1044 = dshr(vb_array, T_1043) @[icache.scala 105:43] 
    node T_1045 = bits(T_1044, 0, 0) @[icache.scala 105:43] 
    node T_1046 = bits(T_1045, 0, 0) @[icache.scala 105:94] 
    node T_1047 = and(T_1040, T_1046) @[icache.scala 105:32] 
    node T_1050 = or(UInt<1>("h00"), UInt<1>("h00")) @[Ecc.scala 14:27] 
    node T_1051 = bits(tag_rdata[2], 19, 0) @[icache.scala 108:31] 
    node T_1052 = eq(T_1051, s1_tag) @[icache.scala 108:45] 
    s1_tag_match[2] <= T_1052 @[icache.scala 108:21] 
    node T_1053 = and(T_1047, s1_tag_match[2]) @[icache.scala 109:28] 
    s1_tag_hit[2] <= T_1053 @[icache.scala 109:19] 
    node T_1056 = or(UInt<1>("h00"), UInt<1>("h00")) @[Ecc.scala 14:27] 
    node T_1057 = or(T_1050, T_1056) @[icache.scala 110:51] 
    node T_1058 = and(T_1047, T_1057) @[icache.scala 110:30] 
    s1_disparity[2] <= T_1058 @[icache.scala 110:21] 
    node T_1060 = eq(io.invalidate, UInt<1>("h00")) @[icache.scala 105:17] 
    node T_1062 = bits(s1_vaddr, 11, 6) @[icache.scala 105:65] 
    node T_1063 = cat(UInt<2>("h03"), T_1062) @[Cat.scala 20:58] 
    node T_1064 = dshr(vb_array, T_1063) @[icache.scala 105:43] 
    node T_1065 = bits(T_1064, 0, 0) @[icache.scala 105:43] 
    node T_1066 = bits(T_1065, 0, 0) @[icache.scala 105:94] 
    node T_1067 = and(T_1060, T_1066) @[icache.scala 105:32] 
    node T_1070 = or(UInt<1>("h00"), UInt<1>("h00")) @[Ecc.scala 14:27] 
    node T_1071 = bits(tag_rdata[3], 19, 0) @[icache.scala 108:31] 
    node T_1072 = eq(T_1071, s1_tag) @[icache.scala 108:45] 
    s1_tag_match[3] <= T_1072 @[icache.scala 108:21] 
    node T_1073 = and(T_1067, s1_tag_match[3]) @[icache.scala 109:28] 
    s1_tag_hit[3] <= T_1073 @[icache.scala 109:19] 
    node T_1076 = or(UInt<1>("h00"), UInt<1>("h00")) @[Ecc.scala 14:27] 
    node T_1077 = or(T_1070, T_1076) @[icache.scala 110:51] 
    node T_1078 = and(T_1067, T_1077) @[icache.scala 110:30] 
    s1_disparity[3] <= T_1078 @[icache.scala 110:21] 
    node T_1079 = or(s1_tag_hit[0], s1_tag_hit[1]) @[icache.scala 112:44] 
    node T_1080 = or(T_1079, s1_tag_hit[2]) @[icache.scala 112:44] 
    node T_1081 = or(T_1080, s1_tag_hit[3]) @[icache.scala 112:44] 
    node T_1082 = or(s1_disparity[0], s1_disparity[1]) @[icache.scala 112:78] 
    node T_1083 = or(T_1082, s1_disparity[2]) @[icache.scala 112:78] 
    node T_1084 = or(T_1083, s1_disparity[3]) @[icache.scala 112:78] 
    node T_1086 = eq(T_1084, UInt<1>("h00")) @[icache.scala 112:52] 
    node T_1087 = and(T_1081, T_1086) @[icache.scala 112:49] 
    s1_any_tag_hit <= T_1087 @[icache.scala 112:18] 
    smem T_1090 : UInt<64>[512] @[icache.scala 115:28] 
    node T_1092 = eq(repl_way, UInt<1>("h00")) @[icache.scala 116:46] 
    node T_1093 = and(FlowThroughSerializer_1.io.out.valid, T_1092) @[icache.scala 116:34] 
    when T_1093 : @[icache.scala 117:16] 
      node T_1094 = shl(s1_idx, 3) @[icache.scala 119:32] 
      node T_1095 = or(T_1094, refill_cnt) @[icache.scala 119:59] 
      write mport T_1096 = T_1090[T_1095], clk
      T_1096 <= FlowThroughSerializer_1.io.out.bits.data
      skip @[icache.scala 117:16] 
    node T_1097 = bits(s0_vaddr, 11, 3) @[icache.scala 121:28] 
    node T_1099 = eq(T_1093, UInt<1>("h00")) @[icache.scala 122:45] 
    node T_1100 = and(T_1099, s0_valid) @[icache.scala 122:50] 
    wire T_1102 : UInt
    T_1102 is invalid
    when T_1100 :
      T_1102 <= T_1097
      skip
    read mport T_1103 = T_1090[T_1102], clk
    s1_dout[0] <= T_1103 @[icache.scala 122:16] 
    smem T_1106 : UInt<64>[512] @[icache.scala 115:28] 
    node T_1108 = eq(repl_way, UInt<1>("h01")) @[icache.scala 116:46] 
    node T_1109 = and(FlowThroughSerializer_1.io.out.valid, T_1108) @[icache.scala 116:34] 
    when T_1109 : @[icache.scala 117:16] 
      node T_1110 = shl(s1_idx, 3) @[icache.scala 119:32] 
      node T_1111 = or(T_1110, refill_cnt) @[icache.scala 119:59] 
      write mport T_1112 = T_1106[T_1111], clk
      T_1112 <= FlowThroughSerializer_1.io.out.bits.data
      skip @[icache.scala 117:16] 
    node T_1113 = bits(s0_vaddr, 11, 3) @[icache.scala 121:28] 
    node T_1115 = eq(T_1109, UInt<1>("h00")) @[icache.scala 122:45] 
    node T_1116 = and(T_1115, s0_valid) @[icache.scala 122:50] 
    wire T_1118 : UInt
    T_1118 is invalid
    when T_1116 :
      T_1118 <= T_1113
      skip
    read mport T_1119 = T_1106[T_1118], clk
    s1_dout[1] <= T_1119 @[icache.scala 122:16] 
    smem T_1122 : UInt<64>[512] @[icache.scala 115:28] 
    node T_1124 = eq(repl_way, UInt<2>("h02")) @[icache.scala 116:46] 
    node T_1125 = and(FlowThroughSerializer_1.io.out.valid, T_1124) @[icache.scala 116:34] 
    when T_1125 : @[icache.scala 117:16] 
      node T_1126 = shl(s1_idx, 3) @[icache.scala 119:32] 
      node T_1127 = or(T_1126, refill_cnt) @[icache.scala 119:59] 
      write mport T_1128 = T_1122[T_1127], clk
      T_1128 <= FlowThroughSerializer_1.io.out.bits.data
      skip @[icache.scala 117:16] 
    node T_1129 = bits(s0_vaddr, 11, 3) @[icache.scala 121:28] 
    node T_1131 = eq(T_1125, UInt<1>("h00")) @[icache.scala 122:45] 
    node T_1132 = and(T_1131, s0_valid) @[icache.scala 122:50] 
    wire T_1134 : UInt
    T_1134 is invalid
    when T_1132 :
      T_1134 <= T_1129
      skip
    read mport T_1135 = T_1122[T_1134], clk
    s1_dout[2] <= T_1135 @[icache.scala 122:16] 
    smem T_1138 : UInt<64>[512] @[icache.scala 115:28] 
    node T_1140 = eq(repl_way, UInt<2>("h03")) @[icache.scala 116:46] 
    node T_1141 = and(FlowThroughSerializer_1.io.out.valid, T_1140) @[icache.scala 116:34] 
    when T_1141 : @[icache.scala 117:16] 
      node T_1142 = shl(s1_idx, 3) @[icache.scala 119:32] 
      node T_1143 = or(T_1142, refill_cnt) @[icache.scala 119:59] 
      write mport T_1144 = T_1138[T_1143], clk
      T_1144 <= FlowThroughSerializer_1.io.out.bits.data
      skip @[icache.scala 117:16] 
    node T_1145 = bits(s0_vaddr, 11, 3) @[icache.scala 121:28] 
    node T_1147 = eq(T_1141, UInt<1>("h00")) @[icache.scala 122:45] 
    node T_1148 = and(T_1147, s0_valid) @[icache.scala 122:50] 
    wire T_1150 : UInt
    T_1150 is invalid
    when T_1148 :
      T_1150 <= T_1145
      skip
    read mport T_1151 = T_1138[T_1150], clk
    s1_dout[3] <= T_1151 @[icache.scala 122:16] 
    node T_1153 = eq(stall, UInt<1>("h00")) @[icache.scala 131:38] 
    reg T_1154 : UInt<1>, clk
    when T_1153 : @[Reg.scala 29:19] 
      T_1154 <= s1_hit @[Reg.scala 29:23] 
      skip @[Reg.scala 29:19] 
    node T_1156 = eq(stall, UInt<1>("h00")) @[icache.scala 132:46] 
    reg T_1159 : UInt<1>[4], clk
    when T_1156 : @[Reg.scala 29:19] 
      T_1159 <= s1_tag_hit @[Reg.scala 29:23] 
      skip @[Reg.scala 29:19] 
    node T_1162 = eq(stall, UInt<1>("h00")) @[icache.scala 133:40] 
    reg T_1165 : UInt<64>[4], clk
    when T_1162 : @[Reg.scala 29:19] 
      T_1165 <= s1_dout @[Reg.scala 29:23] 
      skip @[Reg.scala 29:19] 
    node T_1168 = mux(T_1159[0], T_1165[0], UInt<1>("h00")) @[Mux.scala 18:72] 
    node T_1170 = mux(T_1159[1], T_1165[1], UInt<1>("h00")) @[Mux.scala 18:72] 
    node T_1172 = mux(T_1159[2], T_1165[2], UInt<1>("h00")) @[Mux.scala 18:72] 
    node T_1174 = mux(T_1159[3], T_1165[3], UInt<1>("h00")) @[Mux.scala 18:72] 
    node T_1176 = or(T_1168, T_1170) @[Mux.scala 18:72] 
    node T_1177 = or(T_1176, T_1172) @[Mux.scala 18:72] 
    node T_1178 = or(T_1177, T_1174) @[Mux.scala 18:72] 
    wire T_1179 : UInt<64>
    T_1179 is invalid
    T_1179 <= T_1178 @[Mux.scala 18:72] 
    io.resp.bits.datablock <= T_1179 @[icache.scala 134:30] 
    io.resp.valid <= T_1154 @[icache.scala 135:21] 
    node T_1180 = eq(state, UInt<2>("h01")) @[icache.scala 137:33] 
    node T_1182 = eq(io.s2_kill, UInt<1>("h00")) @[icache.scala 137:50] 
    node T_1183 = and(T_1180, T_1182) @[icache.scala 137:47] 
    io.mem.acquire.valid <= T_1183 @[icache.scala 137:24] 
    node T_1184 = shr(refill_addr, 6) @[icache.scala 138:60] 
    node T_1214 = or(UInt<3>("h00"), UInt<1>("h00")) @[Definitions.scala 385:49] 
    node T_1215 = bits(T_1214, 2, 0) @[Definitions.scala 385:61] 
    node T_1217 = or(UInt<3>("h00"), UInt<3>("h07")) @[Definitions.scala 386:43] 
    node T_1218 = bits(T_1217, 2, 0) @[Definitions.scala 386:58] 
    node T_1220 = or(UInt<5>("h00"), UInt<5>("h00")) @[Definitions.scala 387:36] 
    node T_1221 = bits(T_1220, 4, 0) @[Definitions.scala 387:45] 
    node T_1223 = or(UInt<8>("h00"), UInt<1>("h00")) @[Definitions.scala 388:46] 
    node T_1224 = bits(T_1223, 7, 0) @[Definitions.scala 388:54] 
    node T_1227 = cat(T_1221, UInt<1>("h01")) @[Cat.scala 20:58] 
    node T_1228 = cat(T_1215, T_1218) @[Cat.scala 20:58] 
    node T_1229 = cat(T_1228, T_1227) @[Cat.scala 20:58] 
    node T_1231 = cat(T_1218, T_1221) @[Cat.scala 20:58] 
    node T_1232 = cat(T_1231, UInt<1>("h01")) @[Cat.scala 20:58] 
    node T_1234 = cat(T_1224, UInt<1>("h01")) @[Cat.scala 20:58] 
    node T_1236 = cat(T_1224, UInt<1>("h01")) @[Cat.scala 20:58] 
    node T_1238 = cat(T_1221, UInt<1>("h01")) @[Cat.scala 20:58] 
    node T_1239 = cat(T_1215, T_1218) @[Cat.scala 20:58] 
    node T_1240 = cat(T_1239, T_1238) @[Cat.scala 20:58] 
    node T_1242 = cat(UInt<5>("h00"), UInt<1>("h01")) @[Cat.scala 20:58] 
    node T_1244 = cat(UInt<5>("h01"), UInt<1>("h01")) @[Cat.scala 20:58] 
    node T_1245 = eq(UInt<3>("h06"), UInt<3>("h01")) @[Mux.scala 46:19] 
    node T_1246 = mux(T_1245, T_1244, UInt<1>("h00")) @[Mux.scala 46:16] 
    node T_1247 = eq(UInt<3>("h05"), UInt<3>("h01")) @[Mux.scala 46:19] 
    node T_1248 = mux(T_1247, T_1242, T_1246) @[Mux.scala 46:16] 
    node T_1249 = eq(UInt<3>("h04"), UInt<3>("h01")) @[Mux.scala 46:19] 
    node T_1250 = mux(T_1249, T_1240, T_1248) @[Mux.scala 46:16] 
    node T_1251 = eq(UInt<3>("h03"), UInt<3>("h01")) @[Mux.scala 46:19] 
    node T_1252 = mux(T_1251, T_1236, T_1250) @[Mux.scala 46:16] 
    node T_1253 = eq(UInt<3>("h02"), UInt<3>("h01")) @[Mux.scala 46:19] 
    node T_1254 = mux(T_1253, T_1234, T_1252) @[Mux.scala 46:16] 
    node T_1255 = eq(UInt<3>("h01"), UInt<3>("h01")) @[Mux.scala 46:19] 
    node T_1256 = mux(T_1255, T_1232, T_1254) @[Mux.scala 46:16] 
    node T_1257 = eq(UInt<3>("h00"), UInt<3>("h01")) @[Mux.scala 46:19] 
    node T_1258 = mux(T_1257, T_1229, T_1256) @[Mux.scala 46:16] 
    wire T_1287 : {addr_block : UInt<26>, client_xact_id : UInt<1>, addr_beat : UInt<3>, is_builtin_type : UInt<1>, a_type : UInt<3>, union : UInt<12>, data : UInt<64>} @[Definitions.scala 412:19] 
    T_1287 is invalid @[Definitions.scala 412:19] 
    T_1287.is_builtin_type <= UInt<1>("h01") @[Definitions.scala 413:25] 
    T_1287.a_type <= UInt<3>("h01") @[Definitions.scala 414:16] 
    T_1287.client_xact_id <= UInt<1>("h00") @[Definitions.scala 415:24] 
    T_1287.addr_block <= T_1184 @[Definitions.scala 416:20] 
    T_1287.addr_beat <= UInt<1>("h00") @[Definitions.scala 417:19] 
    T_1287.data <= UInt<1>("h00") @[Definitions.scala 418:14] 
    T_1287.union <= T_1258 @[Definitions.scala 419:15] 
    io.mem.acquire.bits <- T_1287 @[icache.scala 138:23] 
    node T_1315 = eq(UInt<2>("h00"), state) @[Conditional.scala 24:42] 
    when T_1315 : @[Conditional.scala 24:73] 
      when s1_miss : @[icache.scala 143:22] 
        state <= UInt<2>("h01") @[icache.scala 143:30] 
        skip @[icache.scala 143:22] 
      invalidated <= UInt<1>("h00") @[icache.scala 144:19] 
      skip @[Conditional.scala 24:73] 
    node T_1317 = eq(UInt<2>("h01"), state) @[Conditional.scala 24:42] 
    when T_1317 : @[Conditional.scala 24:73] 
      when io.mem.acquire.ready : @[icache.scala 147:35] 
        state <= UInt<2>("h02") @[icache.scala 147:43] 
        skip @[icache.scala 147:35] 
      when io.s2_kill : @[icache.scala 148:25] 
        state <= UInt<2>("h00") @[icache.scala 148:33] 
        skip @[icache.scala 148:25] 
      skip @[Conditional.scala 24:73] 
    node T_1318 = eq(UInt<2>("h02"), state) @[Conditional.scala 24:42] 
    when T_1318 : @[Conditional.scala 24:73] 
      when io.mem.grant.valid : @[icache.scala 151:33] 
        state <= UInt<2>("h03") @[icache.scala 151:41] 
        skip @[icache.scala 151:33] 
      skip @[Conditional.scala 24:73] 
    node T_1319 = eq(UInt<2>("h03"), state) @[Conditional.scala 24:42] 
    when T_1319 : @[Conditional.scala 24:73] 
      when refill_done : @[icache.scala 154:26] 
        state <= UInt<2>("h00") @[icache.scala 154:34] 
        skip @[icache.scala 154:26] 
      skip @[Conditional.scala 24:73] 

  module FlowThroughSerializer : 
    input clk : Clock
    input reset : UInt<1>
    output io : {flip in : {flip ready : UInt<1>, valid : UInt<1>, bits : {addr_beat : UInt<3>, client_xact_id : UInt<1>, manager_xact_id : UInt<4>, is_builtin_type : UInt<1>, g_type : UInt<4>, data : UInt<64>}}, out : {flip ready : UInt<1>, valid : UInt<1>, bits : {addr_beat : UInt<3>, client_xact_id : UInt<1>, manager_xact_id : UInt<4>, is_builtin_type : UInt<1>, g_type : UInt<4>, data : UInt<64>}}, cnt : UInt<1>, done : UInt<1>}
    
    io is invalid
    io.out <- io.in @[Serializer.scala 19:12] 
    io.cnt <= UInt<1>("h00") @[Serializer.scala 20:12] 
    io.done <= UInt<1>("h01") @[Serializer.scala 21:13] 